[{"/Users/candy/Desktop/dynata-take-home/form-builder/src/index.js":"1","/Users/candy/Desktop/dynata-take-home/form-builder/src/App.js":"2","/Users/candy/Desktop/dynata-take-home/form-builder/src/data.js":"3","/Users/candy/Desktop/dynata-take-home/form-builder/src/components/Form/Form.js":"4","/Users/candy/Desktop/dynata-take-home/form-builder/src/components/QuestionTypes/QuestionTypes.js":"5","/Users/candy/Desktop/dynata-take-home/form-builder/src/components/EnterYourQuestion/EnterYourQuestion.js":"6","/Users/candy/Desktop/dynata-take-home/form-builder/src/components/FileUpload/FileUpload.js":"7","/Users/candy/Desktop/dynata-take-home/form-builder/src/components/RowOptions/RowOptions.js":"8","/Users/candy/Desktop/dynata-take-home/form-builder/src/components/ColumnOptions/ColumnOptions.js":"9","/Users/candy/Desktop/dynata-take-home/form-builder/src/components/ListOfQuestions/ListOfQuestions.js":"10"},{"size":218,"mtime":1606988155486,"results":"11","hashOfConfig":"12"},{"size":3800,"mtime":1606995662018,"results":"13","hashOfConfig":"12"},{"size":1986,"mtime":1606992901212,"results":"14","hashOfConfig":"12"},{"size":8335,"mtime":1606995302000,"results":"15","hashOfConfig":"12"},{"size":137,"mtime":1606991218035,"results":"16","hashOfConfig":"12"},{"size":573,"mtime":1606992655020,"results":"17","hashOfConfig":"12"},{"size":207,"mtime":1606992698945,"results":"18","hashOfConfig":"12"},{"size":1591,"mtime":1606994860969,"results":"19","hashOfConfig":"12"},{"size":1193,"mtime":1606995255046,"results":"20","hashOfConfig":"12"},{"size":645,"mtime":1606995952688,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"adkg41",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/candy/Desktop/dynata-take-home/form-builder/src/index.js",[],"/Users/candy/Desktop/dynata-take-home/form-builder/src/App.js",["43","44","45"],"import React from 'react';\nimport \"./App.css\";\nimport Form from './components/Form/Form';\nimport data from './data';\nimport ListOfQuestions from './components/ListOfQuestions/ListOfQuestions';\n\nconst Footer = () => {\n  //\n  return (\n  <div>\n    <button onClick={() => alert('hi')}>Save For Later</button>\n    <button>Previous</button>\n    <button>Next</button>\n  </div>\n  )\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      max_allowed_questions: null,\n      allowed_question_types: [],\n      currentSequenceView: null\n    }\n\n    this.addQuestion = this.addQuestion.bind(this);\n    this.selectQuestion = this.selectQuestion.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n  };\n\n  componentDidMount() {\n    this.setState({\n      ...data\n    })\n  }\n  \n  addQuestion(newQuestion) {\n    const questions = [...this.state.questions];\n    const sequence = questions.length + 1;\n    newQuestion.sequence = sequence;\n    questions.push(newQuestion);\n    this.setState({questions: questions});\n  }\n\n  selectQuestion(index) {\n    this.setState({\n      currentSequenceView: index + 1\n    })\n  }\n\n  handleDelete(sequence) {\n    let questions = [...this.state.questions];\n    questions.splice(sequence-1, 1);\n\n    for (let i = 0; i < questions.length; i++) {\n      questions[i].sequence = i + 1;\n    }\n\n    this.setState({\n      currentSequenceView: 0,\n      questions\n    })\n  }\n\n  handleMove(index, e) {\n    const { name } = e.target;\n    const { questions, currentSequenceView } = this.state;\n\n    if ((index === 0 && name === 'up') || (index === questions.length-1 && name === 'down')) {\n      return;\n    }\n\n    const questionsArray = [...questions];\n    const deletedQuestion = questionsArray.splice(index, 1);\n    let newSequence;\n    let splice;\n\n    if (currentSequenceView) {\n      newSequence = 'up' ? currentSequenceView+1 : currentSequenceView-1;\n    }\n\n    if (name === 'up') {\n      splice = questionsArray.splice(index-1, 0, deletedQuestion[0])\n    }\n\n    if (name === 'down') {\n      splice = questionsArray.splice(index+1, 0, deletedQuestion[0]);\n    }\n\n    for (let i = 0; i < questionsArray.length; i++) {\n      questionsArray[i].sequence = i+1;\n      if (newSequence === i+1 && currentSequenceView) {\n        newSequence = questionsArray[i].sequence;\n      } \n    }\n\n    this.setState({\n      questions: questionsArray,\n      currentSequenceView: newSequence\n    })\n  }\n\n  render() {\n    let questionsList = this.state.questions.map((question, index) => {\n      return (\n        <div key={question.id}>\n          <div onClick={() => this.selectQuestion(index)}>\n            Question {index + 1}: {question.text}\n          </div>\n          <button name=\"up\" type=\"button\" onClick={(e) => this.handleMove(index, e)}>up</button>\n          <button name=\"down\" type=\"button\" onClick={(e) => this.handleMove(index, e)}>down</button>\n        </div>\n      )\n    })\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Setup Survey</h1>\n        <Form\n          questionTypes={this.state.allowed_question_types}\n          addQuestion={this.addQuestion}\n          questionsLength={this.state.questions.length}\n          maxQuestions={this.state.max_allowed_questions}\n          viewQuestion={this.state.questions[this.state.currentSequenceView-1]}\n          handleDelete={this.handleDelete}\n        />\n        {/* <Footer /> */}\n\n        {JSON.stringify(this.state)}\n        \n          <ListOfQuestions\n            questions={this.state.questions}\n            selectQuestion={this.selectQuestion}\n            handleMove={this.handleMove}\n          />\n      </div>\n    );\n  }\n}\n\n// App.defaultProps = {\n//   ...daga\n// }\n\nexport default App;\n","/Users/candy/Desktop/dynata-take-home/form-builder/src/data.js",[],"/Users/candy/Desktop/dynata-take-home/form-builder/src/components/Form/Form.js",[],"/Users/candy/Desktop/dynata-take-home/form-builder/src/components/QuestionTypes/QuestionTypes.js",[],"/Users/candy/Desktop/dynata-take-home/form-builder/src/components/EnterYourQuestion/EnterYourQuestion.js",[],"/Users/candy/Desktop/dynata-take-home/form-builder/src/components/FileUpload/FileUpload.js",[],"/Users/candy/Desktop/dynata-take-home/form-builder/src/components/RowOptions/RowOptions.js",[],"/Users/candy/Desktop/dynata-take-home/form-builder/src/components/ColumnOptions/ColumnOptions.js",[],"/Users/candy/Desktop/dynata-take-home/form-builder/src/components/ListOfQuestions/ListOfQuestions.js",[],{"ruleId":"46","severity":1,"message":"47","line":7,"column":7,"nodeType":"48","messageId":"49","endLine":7,"endColumn":13},{"ruleId":"46","severity":1,"message":"50","line":90,"column":7,"nodeType":"48","messageId":"49","endLine":90,"endColumn":13},{"ruleId":"46","severity":1,"message":"51","line":107,"column":9,"nodeType":"48","messageId":"49","endLine":107,"endColumn":22},"no-unused-vars","'Footer' is assigned a value but never used.","Identifier","unusedVar","'splice' is assigned a value but never used.","'questionsList' is assigned a value but never used."]